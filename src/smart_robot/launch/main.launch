<launch>
    <param name="/use_sim_time" value="true" />
    <!-- 1. 啟動 Gazebo 環境 -->
    <arg name="world_name" default="$(find smart_robot)/worlds/garden.world"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <!-- 2. 在 Gazebo 中生成機器人模型 -->
    <include file="$(find smart_robot)/launch/spawn_robot.launch"/>

    <!-- 3. 載入預先製作好的地圖 -->
    <arg name="map_file" default="$(find smart_robot)/maps/garden_map.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <!-- 4. 啟動 AMCL 進行定位 -->
    <!-- AMCL (Adaptive Monte Carlo Localization) 用於在已知地圖中，根據雷射和里程計數據來定位機器人 -->
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
        <param name="odom_model_type" value="diff"/>
        <param name="odom_frame_id" value="odom"/>
        <param name="base_frame_id" value="base_footprint"/>
        <param name="global_frame_id" value="map"/>
        
        <!-- 增加粒子數和更新容忍度 -->
        <param name="min_particles" value="500"/>
        <param name="max_particles" value="5000"/>
        <param name="update_min_d" value="0.2"/>
        <param name="update_min_a" value="0.26"/>
        <param name="transform_tolerance" value="0.5"/>
        
        <!-- 濾波器參數 -->
        <param name="odom_alpha1" value="0.1"/>
        <param name="odom_alpha2" value="0.1"/>
        <param name="odom_alpha3" value="0.1"/>
        <param name="odom_alpha4" value="0.1"/>

        <!-- 雷射模型參數 -->
        <param name="laser_model_type" value="likelihood_field"/>
        <param name="laser_z_hit" value="0.95"/>
        <param name="laser_z_rand" value="0.05"/>
        <param name="laser_likelihood_max_dist" value="2.0"/>
        <param name="laser_max_beams" value="180"/>

        <!-- 初始位置 -->
        <param name="initial_pose_x" value="-3.0"/>
        <param name="initial_pose_y" value="-3.0"/>
        <param name="initial_pose_a" value="0.05"/>
    </node>

    <!-- 5. 啟動 move_base 導航核心 -->
    <rosparam command="delete" param="/move_base" />
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <!-- 載入所有設定檔 -->
        <rosparam file="$(find smart_robot)/config/costmap_common.yaml" command="load" ns="global_costmap" />
        <rosparam file="$(find smart_robot)/config/costmap_common.yaml" command="load" ns="local_costmap" />
        <rosparam file="$(find smart_robot)/config/local_costmap.yaml" command="load" />
        <rosparam file="$(find smart_robot)/config/global_costmap.yaml" command="load" />
        <rosparam file="$(find smart_robot)/config/dwa_local_planner.yaml" command="load" />
        <!-- 指定區域路徑規劃器 -->
        <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
        <param name="controller_frequency" value="10.0"/>
        <param name="controller_patience" value="15.0"/>
        <param name="planner_frequency" value="0.1"/>
        <param name="planner_patience" value="5.0"/>
        <param name="transform_tolerance" value="1.0"/>
    </node>
    
    <!-- 6. 啟動你的應用程式節點 -->
    <rosparam file="$(find smart_robot)/config/plant_locations.yaml" command="load" ns="manager_node" />
    <node name="manager_node" pkg="smart_robot" type="manager_node.py" output="screen"/>
    <node name="moisture_sensor_node" pkg="smart_robot" type="moisture_sensor_node.py" output="screen"/>
    <node name="pump_driver_node" pkg="smart_robot" type="pump_driver_node.py" output="screen"/>

    <!-- 7. (可選) 啟動 Rviz 進行可視化 -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find smart_robot)/config/nav.rviz" />
</launch>